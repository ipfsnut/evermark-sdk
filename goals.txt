@evermark-sdk/
â”œâ”€â”€ core/              # Central coordination & configuration  
â”œâ”€â”€ images/ ðŸš€         # STARTING HERE - Image handling
â”œâ”€â”€ blockchain/        # Smart contract interactions
â”œâ”€â”€ storage/           # Supabase + IPFS management
â”œâ”€â”€ metadata/          # Content validation & transformation
â”œâ”€â”€ social/            # Farcaster, Twitter integrations
â”œâ”€â”€ search/            # Search, filtering, discovery
â”œâ”€â”€ analytics/         # Usage tracking & performance
â”œâ”€â”€ react/             # React components & hooks
â””â”€â”€ testing/           # Test utilities & mocks


@evermark-sdk/images/
â”œâ”€â”€ core/                    # Pure image logic
â”‚   â”œâ”€â”€ url-resolver.ts      # Source prioritization  
â”‚   â”œâ”€â”€ image-validator.ts   # File validation
â”‚   â”œâ”€â”€ format-detector.ts   # Image format detection
â”‚   â””â”€â”€ optimization.ts      # Compression algorithms
â”œâ”€â”€ browser/                 # Browser-specific
â”‚   â”œâ”€â”€ image-loader.ts      # Native Image() wrapper
â”‚   â”œâ”€â”€ cors-handler.ts      # Supabase authentication
â”‚   â”œâ”€â”€ cache-manager.ts     # Browser cache optimization
â”‚   â”œâ”€â”€ lazy-loader.ts       # IntersectionObserver
â”‚   â””â”€â”€ performance.ts       # Loading metrics
â”œâ”€â”€ processing/              # Image processing
â”‚   â”œâ”€â”€ compressor.ts        # Client-side compression
â”‚   â”œâ”€â”€ resizer.ts           # Dynamic resizing  
â”‚   â”œâ”€â”€ thumbnail.ts         # Thumbnail generation
â”‚   â””â”€â”€ format-converter.ts  # Format conversion
â”œâ”€â”€ react/                   # React integration
â”‚   â”œâ”€â”€ hooks/               # useImageLoader, useLazyImage, etc.
â”‚   â”œâ”€â”€ components/          # ImageDisplay, ImageUpload, etc.
â”‚   â””â”€â”€ providers/           # ImageConfigProvider
â””â”€â”€ testing/                 # Test utilities
    â”œâ”€â”€ mock-images.ts       # Test image data
    â”œâ”€â”€ test-server.ts       # Mock HTTP server
    â””â”€â”€ helpers.ts           # Testing utilities


## End-to-End Image Flow

Upload: Validate â†’ Compress â†’ Thumbnail â†’ Upload to Supabase + IPFS
Storage: Multiple URLs saved with backup redundancy
Display: Resolve sources â†’ Try in priority â†’ Handle CORS â†’ Show result
Debug: Detailed logs â†’ Error classification â†’ Retry options

